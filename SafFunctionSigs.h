// FunctionSigs.h: function signatures for the BoschHelper class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_BOSCHFUNCTIONSIGS_H__56f34b1a_19D4_4904_923E_1C391DF3A947__INCLUDED_)
#define AFX_BOSCHFUNCTIONSIGS_H__56f34b1a_19D4_4904_923E_1C391DF3A947__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//FunctionSigs

//3d array declaration

#define NUM_SIGS	    0x04

unsigned char fs_functionnames[NUM_SIGS][255] = {
			{ "CRC8Sub" },
			{"RSACallingSub"},
			{"CRC32ME71Sub"},
			{"CRC32ME75Sub"}
			};

unsigned char fs_functioncomments[NUM_SIGS][255] = {
			{"Works out a basic CRC8 checksum"}, 
			{"Deals with the RSA checking"},
			{"Works out the CRC32 checksums"},
			{"Works out the CRC32 checksums"}
			};

unsigned char fs_sigs[NUM_SIGS][118] = {
			//CRC8
			{0x88,0x90,0x88,0x80,0x88,0x70,0x88,0x60,0x28,0x04,0xc2,0xf4,0xff,0xff,0xc2,0xf5,
			0xff,0xff,0x1b,0x45,0xf2,0xf4,0x0e,0xfe,0xc2,0xf2,0xff,0xff,0x1b,0x42,0xf2,0xf5,
			0x0c,0xfe,0xf2,0xf4,0x0e,0xfe,0x26,0xf4,0x98,0xf3,0x36,0xf5,0x28,0x00,0x3d,0x04,
			0x8a,0xff,0x02,0xff,0xea,0x00,0xff,0xff,0xf2,0xf4,0xff,0xff,0x66,0xf4,0x00,0x80,
			0x2d,0x1d,0x84,0x00,0xff,0xff,0xa8,0x40,0x66,0xf4,0x00,0x0f,0x46,0xf4,0x00,0x01,
			0x2d,0x15,0xa8,0x40,0x0a,0xf4,0x02,0x02,0xb8,0x40,0xa8,0x50,0x1a,0xf5,0x20,0x20,
			0xb8,0x50,0xa8,0x40,0x0a,0xf4,0x01,0x01,0xb8,0x40,0xa8,0x50,0x1a,0xf5,0x01,0x0f,
			0xb8,0x50,0x88,0x50,0xe0,0x1c},
			//RSA Calling Sub
			{0x8a,0xff,0x52,0xff,0xda,0xff,0xff,0xff,0xf3,0xf8,0xff,0xff,0x2d,0x27,0x25,0x8f,
			0xff,0xff,0xf3,0xfa,0xff,0xff,0x49,0xa5,0xfd,0x19,0xff,0xff,0xff,0xff,0xe6,0xfc,
			0xff,0xff,0xe0,0x0d,0xe6,0xfe,0x10,0x00,0xda,0xff,0xff,0xff,0xe6,0xfc,0xff,0xff,
			0xe0,0x0d,0xe6,0xfe},
			 //CRC32 ME71 Sub
			{0x88,0x90,0x88,0x80,0x88,0x70,0x88,0x60,0x28,0x06,0xc2,0xf4,0xff,0xff,0xc2,0xf5,
			0xff,0xff,0x1b,0x45,0xf2,0xf4,0x0e,0xfe,0xc2,0xf2,0xff,0xff,0x1b,0x42,0xf2,0xf5,
			0x0c,0xfe,0xf2,0xf4,0x0e,0xfe,0x26,0xf4,0x98,0xf3,0x36,0xf5,0x28,0x00,0xea,0x20,
			0xff,0xff,0xf3,0xf8,0xff,0xbd,0x47,0xf8,0x33,0x00,0xea,0x30,0xff,0xff,0xf3,0xfa,
			0xff,0xbd,0x47,0xfa,0x33,0x00,0xea,0x30,0xff,0xff,0xff,0xff,0xf3,0xf6,0xff,0xff,
			0xea,0x30,0xff,0xff,0xf3,0xf4,0xff,0xff,0x47,0xf4,0x33,0x00,0xea,0x30,0xff,0xff,
			0xe1,0x12,0xf7,0xf2,0xff,0xff,0xe1,0x28,0xf7,0xf8,0xff,0xff,0xf3,0xf8,0xff,0xbd,
			0xf7,0xf8,0xff,0xff,0xf7,0xfa},
			//CRC32 ME75 Sub
			{0x88,0x90,0x88,0x80,0x88,0x70,0x88,0x60,0x28,0x06,0xc2,0xf4,0xff,0xa8,0xc2,0xf5,
			0xff,0xa8,0x1b,0x45,0xf2,0xf4,0x0e,0xfe,0xc2,0xf2,0xff,0xa8,0x1b,0x42,0xf2,0xf5,
			0x0c,0xfe,0xf2,0xf4,0x0e,0xfe,0x26,0xf4,0x98,0xf3,0x36,0xf5,0x28,0x00,0xea,0x20,
			0xff,0xff,0xf3,0xf8,0x7a,0xbb,0x47,0xf8,0x33,0x00,0xea,0x30,0xff,0xff,0xf3,0xfa,
			0x8a,0xbb,0x47,0xfa,0x33,0x00,0xea,0x30,0xff,0xff,0x4f,0xff,0xf3,0xf6,0xff,0xa8,
			0xea,0x30,0xff,0xff,0xf3,0xf4,0xff,0xa8,0x47,0xf4,0x33,0x00,0xea,0x30,0xff,0xff,
			0xe1,0x12,0xf7,0xf2,0xff,0xa8,0xe1,0x28,0xf7,0xf8,0xff,0xa8,0xf3,0xf8,0x7a,0xbb,
			0xf7,0xf8,0xff,0xa8,0xf7,0xfa},
		};


unsigned char fs_siglen[NUM_SIGS] = { 118, 52, 118, 118 };


#endif // !defined(AFX_BOSCHFUNCTIONSIGS_H__56f34b1a_19D4_4904_923E_1C391DF3A947__INCLUDED_)
